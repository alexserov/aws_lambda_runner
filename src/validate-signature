	// // if a github webhook secret it provided, require the check
	// if os.Getenv("GITHUB_WEBHOOK_SECRET") != "" {
	// 	secretKey := []byte(os.Getenv("GITHUB_WEBHOOK_SECRET"))
	// 	sha256Header := req.Headers["X-Hub-Signature-256"]
	// 	sha256HeaderParts := strings.SplitN(sha256Header, "=", 2)
	// 	buf, err := hex.DecodeString(sha256HeaderParts[1])
	// 	if err != nil {
	// 		fmt.Errorf("Error decoding signature %q: %w", sha256Header, err)
	// 		return events.APIGatewayProxyResponse{StatusCode: 400, Body: "Error decoding signature"}, nil
	// 	}
	// 	hashFunc := sha256.New
	// 	mac := hmac.New(hashFunc, secretKey)
	// 	mac.Write([]byte(req.Body))
	// 	ms := mac.Sum(nil)
	// 	if !hmac.Equal(buf, ms) {
	// 		fmt.Errorf("Payload signature check failed")
	// 		return events.APIGatewayProxyResponse{StatusCode: 417, Body: "Payload signature check failed"}, nil
	// 	}
	// }
